name: Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  frontend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    strategy:
      matrix:
        node-version: [20]  # 本地测试时只用最新版本

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Clean npm cache
      run: npm cache clean --force

    - name: Remove existing node_modules and package-lock
      run: |
        rm -rf node_modules
        rm -f package-lock.json

    - name: Install dependencies
      run: npm install --force

    - name: Run ESLint
      run: npm run lint

    - name: Auto-fix ESLint issues
      run: npm run lint:fix
      continue-on-error: true

    - name: Auto-format with Prettier
      run: npm run format
      continue-on-error: true

    - name: Run Type Check
      run: npm run type-check

    - name: Run Tests
      run: |
        # 首先尝试安装平台特定的 rollup 依赖
        npm run install-rollup
        # 运行测试
        npm run test:fix
      env:
        # 设置环境变量帮助 npm 处理可选依赖
        ROLLUP_WATCH: false
        NODE_ENV: test

    - name: Build application
      run: npm run build

    - name: Check if there are any changes after auto-fix
      id: changes
      run: |
        if git diff --quiet; then
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Generate frontend report
      if: always()
      run: |
        echo "## Frontend CI Results" >> $GITHUB_STEP_SUMMARY
        echo "Node.js 版本: ${{ matrix.node-version }}" >> $GITHUB_STEP_SUMMARY
        echo "构建完成时间: $(date)" >> $GITHUB_STEP_SUMMARY
        if [ -d "dist" ]; then
          echo "前端构建成功" >> $GITHUB_STEP_SUMMARY
        fi
